/*** Thimble options (user config) ***
 *************************************
 * Note: when you are done changing  *
 * configuration items, rename this  *
 * to thimble.config _before_        *
 * compiling!                        *
 *************************************/

// Define precision, in inverse millimeters. That is, 1 is 1 millimeter
//   whereas 100 is .01 millimeters.
#define PRECISION 1000

// Maximum steps per second. If set too high, your steppers won't move and may
//   damage themselves!
#define X_STEPS_PER_SECOND  200
#define Y_STEPS_PER_SECOND  200
#define Z_STEPS_PER_SECOND  200

// Check each line with G-code's checksum algorithm. Commenting this out will
//   speed up the firmware, at the cost of command checking.
//#define CHECKSUM

// Steps per millimeter.
#define XSTEP 8
#define YSTEP 8
#define ZSTEP 12

// Shift register pins, if used.
#define SR_LATCHPIN 8
#define SR_DATAPIN  11
#define SR_CLOCKPIN 12

// X, Y, and Z steppers. Use ShiftStepper if it is a motor driven through a
// shift register, or BipolarStepper if the coils are driven by the Arduino.
#define XSTEPPER_TYPE ShiftStepper
#define YSTEPPER_TYPE ShiftStepper
#define ZSTEPPER_TYPE BipolarStepper

// Stepper motor arguments. For a shift-register stepper, put "shiftregister, #"
//   where # is the motor ID.  For a Bipolar stepper, it should be the four pins
//   the Arduino should send pulses to (indirectly, of course - through an H-bridge
//   or something!)
#define XSTEPPER_OPTIONS shiftregister, 0
#define YSTEPPER_OPTIONS shiftregister, 1
#define ZSTEPPER_OPTIONS 6, 7, 9, 10

// X, Y, and Z endstop pins, as well as inverted statuses for each of them.
//  Uncomment the *STOP_INVERT definitions to _disable_ inversion (leave them 
//  uncommented if you have Normally Open endstops, which is probably a bad idea anyway).
#define XSTOP_PIN A0
#define YSTOP_PIN A1
#define ZSTOP_PIN A2
//#define XSTOP_INVERT
//#define YSTOP_INVERT
//#define ZSTOP_INVERT

// Watchdog to keep everything under control if something bad happens.
//   Uncomment this out if you have an AVR with a new bootloader (such as optiboot)
//   or only if you know what you're doing. If you have an older bootloader, this
//   may throw it into a reset loop.
//#define WATCHDOG

/*** end user config ***/
